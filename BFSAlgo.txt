// Breadth First Search ALgorithm: used to find shortest path between two 
// areas.

function __bfs__(self, startNode, endNode):
    // To execute this algorithm, we will need a queue + a list
    // for visiting nodes

    queue = Queue()
    visited = list()

    // We can start by marking our current node as having been visited.
    visited.append(startNode)
    // Then add him to the queue
    queue.append(startNode)

    // While the queue is not empty:
    while(queue != empty):
        // pop the beginning of the queue
        node = queue.pop()
        
        //If it is the last node we want
        if(node == endNode):
            return node
        
        // Get the neighbours of the node
        neighbours = node.getNeighbours()
        
        for(x in neighbours):
            if x not in visited:
                // We add x to visited and queue
                visited.append(x)
                queue.add(x)
    
    //If we get here then there is no possible path for the nodes.
    return None